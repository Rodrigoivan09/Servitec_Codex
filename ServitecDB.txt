DROP DATABASE IF EXISTS ServitecDB;
CREATE DATABASE ServitecDB;
USE ServitecDB;

-- Tabla Usuarios
-- Justificación: Cada usuario tiene un correo único como llave secundaria natural. 
CREATE TABLE Usuarios (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(100) NOT NULL UNIQUE,
    telefono VARCHAR(15) NOT nULL,
    direccion TEXT NOT NULL,
    contrasena VARCHAR(255) NOT NULL
);

-- Tabla Técnicos
-- Justificación: Los técnicos tienen identificadores naturales como correo y teléfono únicos.
CREATE TABLE Tecnicos (
    id_tecnico INT AUTO_INCREMENT PRIMARY KEY, -- Llave primaria: autoincrementada
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(100) NOT NULL UNIQUE, -- Llave secundaria: correo único
    telefono VARCHAR(15) NOT NULL UNIQUE, -- Llave secundaria: teléfono único
    direccion TEXT NOT NULL,
    efirma VARCHAR(255) NOT NULL, -- Documento de e.firma
    certificacion VARCHAR(255) NOT NULL, -- Documento de certificación
    contrasena VARCHAR(100) NOT NULL,
    estado VARCHAR(20) NOT NULL DEFAULT 'DISPONIBLE'
);

-- Tabla Categorías
-- Justificación: Cada categoría tiene un nombre único como identificador natural.
CREATE TABLE Categorias (
    id_categoria INT AUTO_INCREMENT PRIMARY KEY, -- Llave primaria: autoincrementada
    nombre_categoria VARCHAR(100) NOT NULL UNIQUE -- Llave secundaria: nombre único
);

-- Tabla Servicios
-- Justificación: Cada servicio tiene un nombre único como llave secundaria natural.
CREATE TABLE Servicios (
    id_servicio INT AUTO_INCREMENT PRIMARY KEY, -- Llave primaria: autoincrementada
    nombre_servicio VARCHAR(100) NOT NULL UNIQUE, -- Llave secundaria: nombre único
    descripcion TEXT NOT NULL,
    id_categoria INT NOT NULL,
    FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria)
);

-- Tabla Tarifas
-- Justificación: Las tarifas son únicas por cada categoría, estableciendo una relación directa.
CREATE TABLE Tarifas (
    id_tarifa INT AUTO_INCREMENT PRIMARY KEY,
    id_servicio INT NOT NULL UNIQUE,
    tarifa_base DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_servicio) REFERENCES Servicios(id_servicio)
);

-- Tabla Horarios de Técnicos
-- Justificación: Los horarios se identifican por una llave compuesta de técnico, día y hora.
CREATE TABLE HorariosTecnicos (
    id_horario INT AUTO_INCREMENT PRIMARY KEY, -- Llave primaria: autoincrementada
    id_tecnico INT NOT NULL,
    dia VARCHAR(10) NOT NULL,
    hora_inicio TIME NOT NULL,
    hora_fin TIME NOT NULL,
    UNIQUE (id_tecnico, dia, hora_inicio), -- Llave secundaria: horario único por técnico
    FOREIGN KEY (id_tecnico) REFERENCES Tecnicos(id_tecnico)
);

-- Tabla Solicitudes
-- Justificación: No tiene una llave secundaria porque no existe un campo único natural, 
-- pero la llave primaria satisface las necesidades del modelo.
CREATE TABLE Solicitudes (
    id_solicitud INT AUTO_INCREMENT PRIMARY KEY, -- Llave primaria: autoincrementada
    id_usuario INT NOT NULL,
    id_tecnico INT NOT NULL,
    id_servicio INT NOT NULL,
    fecha DATE NOT NULL,
    fecha_solicitud DATE NOT NULL,
    hora_llegada TIME NOT NULL DEFAULT '00:00:00',
    estado VARCHAR(50) NOT NULL DEFAULT 'Pendiente',
    direccion VARCHAR(255) NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_tecnico) REFERENCES Tecnicos(id_tecnico),
    FOREIGN KEY (id_servicio) REFERENCES Servicios(id_servicio)
);

-- Tabla Pagos Simulados
-- Justificación: Cada pago está relacionado con una solicitud, estableciendo una llave secundaria única.
CREATE TABLE Pagos_Simulados (
    id_pago INT AUTO_INCREMENT PRIMARY KEY, -- Llave primaria: autoincrementada
    id_solicitud INT NOT NULL UNIQUE, -- Llave secundaria: un pago por solicitud
    numero_tarjeta VARCHAR(16) NOT NULL,
    fecha_vencimiento DATE NOT NULL,
    cvv INT NOT NULL,
    monto DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_solicitud) REFERENCES Solicitudes(id_solicitud)
);

-- Tabla Evaluaciones
-- Justificación: Cada solicitud solo puede tener una evaluación, estableciendo una llave secundaria única.
CREATE TABLE Evaluaciones (
    id_evaluacion INT AUTO_INCREMENT PRIMARY KEY,
    id_solicitud INT NOT NULL UNIQUE,
    id_tecnico INT NOT NULL,
    id_usuario INT NOT NULL,
    id_servicio INT,
    calificacion INT CHECK (calificacion BETWEEN 1 AND 5),
    comentarios TEXT,
    fecha_evaluacion DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_solicitud) REFERENCES Solicitudes(id_solicitud),
    FOREIGN KEY (id_tecnico) REFERENCES Tecnicos(id_tecnico),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_servicio) REFERENCES Servicios(id_servicio)
);


-- Tabla Categorías-Servicios (Relación Muchos a Muchos)
-- Justificación: La llave compuesta garantiza la unicidad sin necesidad de otra llave secundaria.
CREATE TABLE CategoriaServicio (
    id_categoria INT NOT NULL,
    id_servicio INT NOT NULL,
    PRIMARY KEY (id_categoria, id_servicio), -- Llave primaria: compuesta
    FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria),
    FOREIGN KEY (id_servicio) REFERENCES Servicios(id_servicio)
);

CREATE TABLE Tecnico_Servicio (
    id_tecnico INT NOT NULL,
    id_servicio INT NOT NULL,
    PRIMARY KEY (id_tecnico, id_servicio),
    FOREIGN KEY (id_tecnico) REFERENCES Tecnicos(id_tecnico),
    FOREIGN KEY (id_servicio) REFERENCES Servicios(id_servicio)
);

-- Relación Muchos a Muchos: Técnicos - Categorías
CREATE TABLE Tecnico_tarifastarifasCategoria (
    id_tecnico INT NOT NULL,
    id_categoria INT NOT NULL,
    PRIMARY KEY (id_tecnico, id_categoria),
    FOREIGN KEY (id_tecnico) REFERENCES Tecnicos(id_tecnico),
    FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria)
);

CREATE TABLE Tecnico_Categoria (
    id_tecnico INT NOT NULL,
    id_categoria INT NOT NULL,
    PRIMARY KEY (id_tecnico, id_categoria),
    FOREIGN KEY (id_tecnico) REFERENCES Tecnicos(id_tecnico),
    FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria)
);

CREATE TABLE IF NOT EXISTS Administradores (
    id_admin INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    correo VARCHAR(100) NOT NULL UNIQUE,
    telefono VARCHAR(15) NOT NULL,
    contrasena VARCHAR(255) NOT NULL
);


-- Seleccionamos la base de datos
USE ServitecDB;

INSERT INTO Administradores (nombre, correo, telefono, contrasena)
VALUES ('admin', 'admin', '9999999999', 'password');

INSERT INTO usuarios (nombre, correo, telefono, direccion, contrasena) VALUES
('user', 'user', '5551234567', 'Calle Falsa 123, CDMX', 'password');

-- Inserciones para la tabla Usuarios
INSERT INTO Categorias (nombre_categoria) VALUES
('Plomería'),
('Electricidad'),
('Reparación de Electrodomésticos');

-- Servicios de Plomería (id_categoria = 1)
INSERT INTO Servicios (nombre_servicio, descripcion, id_categoria) VALUES
('Reparación de fugas', 'Detectar y reparar fugas de agua.', 1),
('Instalación de tuberías', 'Instalación de tuberías en baños y cocinas.', 1),
('Desazolve', 'Desazolve de drenajes y tuberías obstruidas.', 1);

-- Servicios de Electricidad (id_categoria = 2)
INSERT INTO Servicios (nombre_servicio, descripcion, id_categoria) VALUES
('Instalación eléctrica', 'Montaje de cableado eléctrico.', 2),
('Cambio de apagadores', 'Sustitución de apagadores dañados.', 2),
('Revisión de cortos', 'Detección de fallas eléctricas.', 2);

-- Servicios de Electrodomésticos (id_categoria = 3)
INSERT INTO Servicios (nombre_servicio, descripcion, id_categoria) VALUES
('Reparación de lavadora', 'Diagnóstico y reparación de lavadoras.', 3),
('Reparación de refrigerador', 'Mantenimiento de refrigeradores.', 3),
('Reparación de microondas', 'Revisión de microondas que no encienden.', 3);

INSERT INTO Tarifas (id_servicio, tarifa_base) VALUES
-- Plomería
(1, 500.00), (2, 700.00), (3, 600.00),
-- Electricidad
(4, 800.00), (5, 300.00), (6, 400.00),
-- Electrodomésticos
(7, 750.00), (8, 850.00), (9, 500.00);


-- Técnicos de Plomería
INSERT INTO Tecnicos (nombre, correo, telefono, direccion, efirma, certificacion, contrasena, estado) VALUES
('Mario Plomero', 'mario@plomeria.com', '5551111111', 'Calle Plomo 1', 'efirma1.pdf', 'cert1.pdf', '1234', 'DISPONIBLE'),
('Luisa Tubo', 'luisa@plomeria.com', '5552222222', 'Calle Agua 2', 'efirma2.pdf', 'cert2.pdf', '1234', 'DISPONIBLE'),
('Carlos Drenaje', 'carlos@plomeria.com', '5553333333', 'Calle Drenaje 3', 'efirma3.pdf', 'cert3.pdf', '1234', 'DISPONIBLE');

-- Técnicos de Electricidad
INSERT INTO Tecnicos (nombre, correo, telefono, direccion, efirma, certificacion, contrasena, estado) VALUES
('Elena Voltios', 'elena@electrica.com', '5554444444', 'Calle Luz 4', 'efirma4.pdf', 'cert4.pdf', '1234', 'DISPONIBLE'),
('Luis Cable', 'luis@electrica.com', '5555555555', 'Calle Corriente 5', 'efirma5.pdf', 'cert5.pdf', '1234', 'DISPONIBLE'),
('Diana Corto', 'diana@electrica.com', '5556666666', 'Calle Chispa 6', 'efirma6.pdf', 'cert6.pdf', '1234', 'DISPONIBLE');

-- Técnicos de Electrodomésticos
INSERT INTO Tecnicos (nombre, correo, telefono, direccion, efirma, certificacion, contrasena, estado) VALUES
('Pedro Electro', 'pedro@electro.com', '5557777777', 'Calle Frío 7', 'efirma7.pdf', 'cert7.pdf', '1234', 'DISPONIBLE'),
('Ana Lavadora', 'ana@electro.com', '5558888888', 'Calle Calor 8', 'efirma8.pdf', 'cert8.pdf', '1234', 'DISPONIBLE'),
('Ramón Cocina', 'ramon@electro.com', '5559999999', 'Calle Onda 9', 'efirma9.pdf', 'cert9.pdf', '1234', 'DISPONIBLE');


-- Técnicos de Plomería
INSERT INTO Tecnico_Servicio (id_tecnico, id_servicio) VALUES
(1, 1), (1, 2),
(2, 2), (2, 3),
(3, 1), (3, 3);

-- Técnicos de Electricidad
INSERT INTO Tecnico_Servicio (id_tecnico, id_servicio) VALUES
(4, 4), (4, 5),
(5, 5), (5, 6),
(6, 4), (6, 6);

-- Técnicos de Electrodomésticos
INSERT INTO Tecnico_Servicio (id_tecnico, id_servicio) VALUES
(7, 7), (7, 8),
(8, 8), (8, 9),
(9, 7), (9, 9);


-- Técnicos Plomería
INSERT INTO Tecnico_Categoria (id_tecnico, id_categoria) VALUES
(1, 1),
(2, 1),
(3, 1);

-- Técnicos Electricidad
INSERT INTO Tecnico_Categoria (id_tecnico, id_categoria) VALUES
(4, 2),
(5, 2),
(6, 2);

-- Técnicos Reparación de Electrodomésticos
INSERT INTO Tecnico_Categoria (id_tecnico, id_categoria) VALUES
(7, 3),
(8, 3),
(9, 3);


INSERT INTO usuarios (nombre, correo, telefono, direccion, contrasena) VALUES
('Juan Pérez', 'juanperez@example.com', '5551234567', 'Calle Falsa 123, CDMX', 'password123'),
('María López', 'maria.lopez@example.com', '5559876543', 'Av. Reforma 456, CDMX', 'mariaSecure'),
('Carlos Méndez', 'cmendez@example.com', '5553217890', 'Col. Del Valle 78, CDMX', 'carlosPass'),
('Lucía Ortega', 'lucia.ortega@example.com', '5557418529', 'Insurgentes Sur 111, CDMX', 'luciaPass99'),
('Ana Torres', 'ana.torres@example.com', '5559638527', 'Nápoles 42, CDMX', 'ana1234');

INSERT INTO solicitudes (id_usuario, id_tecnico, id_servicio, fecha, fecha_solicitud, hora_llegada, estado, direccion) VALUES
(1, 1, 1, '2025-05-21', '2025-05-20', '09:00:00', 'Pendiente', 'Calle Falsa 123, CDMX'),
(2, 2, 2, '2025-05-22', '2025-05-21', '10:30:00', 'Confirmada', 'Av. Reforma 456, CDMX'),
(3, 1, 3, '2025-05-23', '2025-05-22', '11:00:00', 'Pendiente', 'Col. Del Valle 78, CDMX'),
(4, 3, 1, '2025-05-24', '2025-05-23', '14:00:00', 'Completada', 'Insurgentes Sur 111, CDMX'),
(5, 2, 2, '2025-05-25', '2025-05-24', '16:00:00', 'Cancelada', 'Nápoles 42, CDMX');

INSERT INTO evaluaciones (id_solicitud, id_tecnico, id_usuario, id_servicio, calificacion, comentarios) VALUES
(2, 1, 2, 1, 5, 'Excelente atención, todo muy bien.'),
(3, 2, 3, 2, 4, 'Buen trabajo, aunque tardó un poco.'),
(4, 1, 4, 3, 5, 'Muy profesional y rápido.'),
(5, 4, 5, 1, 3, 'Satisfactorio, pero podría mejorar la limpieza.'),
(6, 2, 5, 2, 1, 'El técnico no llegó, mala experiencia.');